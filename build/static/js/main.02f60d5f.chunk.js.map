{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","props","this","likedPostsCount","allPostsCount","className","Component","SearchPanel","onUpdateSearch","e","term","target","value","setState","state","type","placeholder","onChange","PostStatusFilter","buttons","name","label","map","active","filter","classNames","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLike","isImportant","isLiked","React","PostList","posts","postsList","elem","id","elemProps","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAddPost","App","deletePost","index","findIndex","slice","addPost","post","newPost","maxId","item","old","newPostList","searchPosts","items","length","indexOf","filterPosts","console","log","visiblePosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02f60d5f.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./app-header.css\";\r\n\r\nexport default class AppHeader extends Component {\r\n    static propTypes = {\r\n        likedPostsCount: PropTypes.number,\r\n        allPostsCount: PropTypes.number,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const {likedPostsCount, allPostsCount} = this.props;\r\n        return (\r\n            <div className=\"app-header d-flex\">\r\n                <h1>Aleksey Kessler</h1>\r\n                <h2>{allPostsCount} записей, из них понравилось {likedPostsCount}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n    static propTypes = {\r\n        onUpdateSearch: PropTypes.func,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            term: \"\",\r\n        };\r\n    }\r\n    onUpdateSearch = e => {\r\n        const {onUpdateSearch} = this.props;\r\n        const term = e.target.value;\r\n\r\n        this.setState(() => ({\r\n            term: term,\r\n        }));\r\n\r\n        onUpdateSearch(term);\r\n\r\n    };\r\n    render() {\r\n        return (\r\n            <input \r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n    \r\n}\r\n","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./post-status-filter.css\";\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    static propTypes = {\r\n        filter: PropTypes.string,\r\n        onFilterSelect: PropTypes.func\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.buttons = [\r\n            {name: \"all\", label: \"Все\"},\r\n            {name: \"like\", label: \"Понравилось\"},\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = this.props.filter === name;\r\n      \r\n            const classNames = `btn ${active  ? \"btn-info\" : \"btn-outline-secondary\"}`;\r\n            return (\r\n                <button key={name} type=\"button\" className={classNames} onClick={() => this.props.onFilterSelect(name)}>{label}</button>  \r\n            );\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import PostListItem from \"./post-list-item\";\r\nexport default PostListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./post-list-item.css\";\r\n\r\nclass PostListItem extends React.Component {\r\n    static propTypes = {\r\n        label: PropTypes.string,\r\n        important: PropTypes.bool,\r\n        onDelete: PropTypes.func,\r\n        onToggleImportant: PropTypes.func,\r\n        onToggleLike: PropTypes.func,\r\n        isImportant: PropTypes.bool,\r\n        isLiked: PropTypes.bool,\r\n    };\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLike, isImportant, isLiked} = this.props;\r\n\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n\r\n        if (isImportant) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n        if (isLiked) {\r\n            classNames += \" like\";\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\" onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button className=\"btn-star btn-sm\" type=\"button\" onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button className=\"btn-trash btn-sm\" type=\"button\" onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\" ></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default PostListItem;","import PostList from \"./post-list\";\r\nexport default PostList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PostListItem from \"../post-list-item\";\r\n\r\nimport \"./post-list.css\";\r\n\r\nclass PostList extends React.Component {\r\n    static propTypes = {\r\n        posts: PropTypes.array,\r\n        onDelete: PropTypes.func,\r\n        onToggleImportant: PropTypes.func,\r\n        onToggleLike: PropTypes.func,\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const {posts, onDelete, onToggleLike, onToggleImportant} = this.props;\r\n\r\n        const postsList = posts.map(elem => {\r\n            const {id, ...elemProps} = elem;\r\n            \r\n            return (\r\n                <li className=\"list-group-item\" key={id}>\r\n                    <PostListItem {...elemProps}\r\n                        onDelete={() => onDelete(id)}\r\n                        onToggleImportant={() => onToggleImportant(id)}\r\n                        onToggleLike={() => onToggleLike(id)}\r\n                    />\r\n                </li>     \r\n            );\r\n        });\r\n        return (\r\n            <ul className=\"app-list list-group\">\r\n                {postsList}\r\n            </ul>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default PostList;","import PostAddForm from \"./post-add-form\";\r\nexport default PostAddForm;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./post-add-form.css\";\r\n\r\nexport default class PostAddForm extends Component {\r\n    static propTypes = {\r\n        onAddPost: PropTypes.func\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: \"\",\r\n        };\r\n    }\r\n    onValueChange = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {onAddPost} = this.props;\r\n        const {text} = this.state;\r\n\r\n        onAddPost(text);\r\n\r\n        this.setState(() => ({\r\n            text: \"\",\r\n        }));\r\n    };\r\n    render() {\r\n        const {text} = this.state;\r\n\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input \r\n                    className=\"form-control new-post-label\"\r\n                    type=\"text\"\r\n                    placeholder=\"О чём вы думаете сейчас?\"\r\n                    onChange={this.onValueChange}\r\n                    value={text}\r\n                />\r\n                <button \r\n                    className=\"btn btn-outline-secondary\"\r\n                    type=\"submit\"\r\n                    >\r\n                    Добавить</button>\r\n            </form>\r\n        );\r\n    } \r\n}\r\n","import App from \"./app\";\r\nexport default App;","import React, {Component} from \"react\";\r\nimport \"./app.css\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport PostStatusFilter from \"../post-status-filter\";\r\nimport PostList from \"../post-list\";\r\nimport PostAddForm from \"../post-add-form\";\r\n\r\nexport default class App extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tpostsList: [\r\n\t\t\t\t{label: \"Сегодня я поел\", id: 1, isImportant: true, isLiked: false},\r\n\t\t\t\t{label: \"Вчера я попил\", id: 2, isImportant: false, isLiked: false},\r\n\t\t\t\t{label: \"Русские вперёд\", id: 3, isImportant: false, isLiked: false},\r\n\t\t\t],\r\n\t\t\tterm: \"\",\r\n\t\t\tfilter: \"all\",\r\n\t\t};\r\n\r\n\t\tthis.maxId = 4;\r\n\t}\r\n\tdeletePost = id => {\r\n\t\tthis.setState(({postsList}) => {\r\n\t\t\tconst index = postsList.findIndex(elem => elem.id === id);\r\n\r\n\t\t\tconst newPostsList = [...postsList.slice(0, index), ...postsList.slice(index + 1)];\r\n\r\n\t\t\treturn {\r\n\t\t\t\tpostsList: newPostsList,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\taddPost = (post) => {\r\n\t\tthis.setState(({postsList}) => {\r\n\t\t\tconst newPost = {label: post, id: ++this.maxId};\r\n\t\t\t\r\n\t\t\tconst newPostsList = [...postsList, newPost];\r\n\r\n\t\t\treturn {\r\n\t\t\t\tpostsList: newPostsList,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tonToggleImportant = (id) => {\r\n\t\tconst {postsList} = this.state;\r\n\r\n\t\tconst index = postsList.findIndex(item => item.id === id);\r\n\r\n\t\tconst old = postsList[index];\r\n\t\tconst newPost = {...old, isImportant: !old.isImportant};\r\n\r\n\t\tconst newPostList = [...postsList.slice(0, index), newPost, ...postsList.slice(index + 1)];\r\n\r\n\t\tthis.setState(() => ({\r\n\t\t\tpostsList: newPostList,\r\n\t\t}));\r\n\t};\r\n\tonToggleLike = (id) => {\r\n\t\tconst {postsList} = this.state;\r\n\r\n\t\tconst index = postsList.findIndex(item => item.id === id);\r\n\r\n\t\tconst old = postsList[index];\r\n\t\tconst newPost = {...old, isLiked: !old.isLiked};\r\n\r\n\t\tconst newPostList = [...postsList.slice(0, index), newPost, ...postsList.slice(index + 1)];\r\n\r\n\t\tthis.setState(() => ({\r\n\t\t\tpostsList: newPostList,\r\n\t\t}));\r\n\t};\r\n\tsearchPosts = (items, term) => {\r\n\t\tif (term.length === 0) {\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\treturn items.filter((item) => {\r\n\t\t\treturn item.label.indexOf(term) > - 1;\r\n\t\t});\r\n\r\n\t};\r\n\tonUpdateSearch = (term) => {\r\n\t\tthis.setState(() => ({\r\n\t\t\tterm: term\r\n\t\t}));\r\n\t};\r\n\tfilterPosts = (items, filter) => {\r\n\t\tconsole.log(filter);\r\n\t\tif (filter === \"like\") {\r\n\t\t\treturn items.filter(item => item.isLiked);\r\n\t\t} else {\r\n\t\t\treturn items;\r\n\t\t}\r\n\t};\r\n\tonFilterSelect = (filter) => {\r\n\t\tthis.setState(() => ({\r\n\t\t\tfilter: filter\r\n\t\t}));\r\n\t};\r\n\trender() {\r\n\t\tconst {postsList, term, filter} = this.state;\r\n\r\n\t\tconst likedPostsCount = postsList.filter(item => item.isLiked).length;\r\n\t\tconst allPostsCount = postsList.length;\r\n\r\n\t\tconst visiblePosts = this.filterPosts(this.searchPosts(postsList, term), filter);\r\n\r\n\t\treturn ( \r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<AppHeader \r\n\t\t\t\t\tlikedPostsCount={likedPostsCount}\r\n\t\t\t\t\tallPostsCount={allPostsCount}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"search-panel d-flex\">\r\n\t\t\t\t\t<SearchPanel \r\n\t\t\t\t\t\tonUpdateSearch={this.onUpdateSearch}/>\r\n\t\t\t\t\t<PostStatusFilter \r\n\t\t\t\t\t\tfilter={filter}\r\n\t\t\t\t\t\tonFilterSelect={this.onFilterSelect}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<PostList \r\n\t\t\t\t\tposts={visiblePosts}\r\n\t\t\t\t\tonDelete={id => this.deletePost(id)}\r\n\t\t\t\t\tonToggleImportant={id => this.onToggleImportant(id)}\r\n\t\t\t\t\tonToggleLike={id => this.onToggleLike(id)}\r\n\t\t\t\t/>\r\n\t\t\t\t<PostAddForm\r\n\t\t\t\t\tonAddPost={this.addPost}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}